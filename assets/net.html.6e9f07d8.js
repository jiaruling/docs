import{c as n}from"./app.9a368eb2.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";var a="/docs/images/OSI7.jpg",p="/docs/images/path.jpg",t="/docs/images/socket.jpg";const e={},o=n('<h2 id="\u7F51\u7EDC\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u7F51\u7EDC\u57FA\u7840" aria-hidden="true">#</a> \u7F51\u7EDC\u57FA\u7840</h2><h3 id="\u4E92\u8054\u7F51\u5206\u5C42\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#\u4E92\u8054\u7F51\u5206\u5C42\u6A21\u578B" aria-hidden="true">#</a> \u4E92\u8054\u7F51\u5206\u5C42\u6A21\u578B</h3><p><img src="'+a+'" alt="OSI7"></p><p><img src="'+p+'" alt="\u6570\u636E\u4F20\u8F93\u8FC7\u7A0B"></p><h4 id="\u7269\u7406\u5C42" tabindex="-1"><a class="header-anchor" href="#\u7269\u7406\u5C42" aria-hidden="true">#</a> \u7269\u7406\u5C42</h4><p>\u6211\u4EEC\u7684\u7535\u8111\u8981\u4E0E\u5916\u754C\u4E92\u8054\u7F51\u901A\u4FE1\uFF0C\u9700\u8981\u5148\u628A\u7535\u8111\u8FDE\u63A5\u7F51\u7EDC\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528\u53CC\u7EDE\u7EBF\u3001\u5149\u7EA4\u3001\u65E0\u7EBF\u7535\u6CE2\u7B49\u65B9\u5F0F\u3002\u8FD9\u5C31\u53EB\u505A\u201D\u5B9E\u7269\u7406\u5C42\u201D\uFF0C\u5B83\u5C31\u662F\u628A\u7535\u8111\u8FDE\u63A5\u8D77\u6765\u7684\u7269\u7406\u624B\u6BB5\u3002\u5B83\u4E3B\u8981\u89C4\u5B9A\u4E86\u7F51\u7EDC\u7684\u4E00\u4E9B\u7535\u6C14\u7279\u6027\uFF0C\u4F5C\u7528\u662F\u8D1F\u8D23\u4F20\u90010\u548C1\u7684\u7535\u4FE1\u53F7\u3002</p><h4 id="\u6570\u636E\u94FE\u8DEF\u5C42" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u94FE\u8DEF\u5C42" aria-hidden="true">#</a> \u6570\u636E\u94FE\u8DEF\u5C42</h4><p>\u5355\u7EAF\u76840\u548C1\u6CA1\u6709\u4EFB\u4F55\u610F\u4E49\uFF0C\u6240\u4EE5\u6211\u4EEC\u4F7F\u7528\u8005\u4F1A\u4E3A\u5176\u8D4B\u4E88\u4E00\u4E9B\u7279\u5B9A\u7684\u542B\u4E49\uFF0C\u89C4\u5B9A\u89E3\u8BFB\u7535\u4FE1\u53F7\u7684\u65B9\u5F0F\uFF1A\u4F8B\u5982\uFF1A\u591A\u5C11\u4E2A\u7535\u4FE1\u53F7\u7B97\u4E00\u7EC4\uFF1F\u6BCF\u4E2A\u4FE1\u53F7\u4F4D\u6709\u4F55\u610F\u4E49\uFF1F\u8FD9\u5C31\u662F\u201D\u6570\u636E\u94FE\u63A5\u5C42\u201D\u7684\u529F\u80FD\uFF0C\u5B83\u5728\u201D\u7269\u7406\u5C42\u201D\u7684\u4E0A\u65B9\uFF0C\u786E\u5B9A\u4E86\u7269\u7406\u5C42\u4F20\u8F93\u76840\u548C1\u7684\u5206\u7EC4\u65B9\u5F0F\u53CA\u4EE3\u8868\u7684\u610F\u4E49\u3002\u65E9\u671F\u7684\u65F6\u5019\uFF0C\u6BCF\u5BB6\u516C\u53F8\u90FD\u6709\u81EA\u5DF1\u7684\u7535\u4FE1\u53F7\u5206\u7EC4\u65B9\u5F0F\u3002\u9010\u6E10\u5730\uFF0C\u4E00\u79CD\u53EB\u505A\u201D\u4EE5\u592A\u7F51\u201D\uFF08Ethernet\uFF09\u7684\u534F\u8BAE\uFF0C\u5360\u636E\u4E86\u4E3B\u5BFC\u5730\u4F4D\u3002</p><p>\u4EE5\u592A\u7F51\u89C4\u5B9A\uFF0C\u4E00\u7EC4\u7535\u4FE1\u53F7\u6784\u6210\u4E00\u4E2A\u6570\u636E\u5305\uFF0C\u53EB\u505A\u201D\u5E27\u201D\uFF08Frame\uFF09\u3002\u6BCF\u4E00\u5E27\u5206\u6210\u4E24\u4E2A\u90E8\u5206\uFF1A\u6807\u5934\uFF08Head\uFF09\u548C\u6570\u636E\uFF08Data\uFF09\u3002\u5176\u4E2D\u201D\u6807\u5934\u201D\u5305\u542B\u6570\u636E\u5305\u7684\u4E00\u4E9B\u8BF4\u660E\u9879\uFF0C\u6BD4\u5982\u53D1\u9001\u8005\u3001\u63A5\u53D7\u8005\u3001\u6570\u636E\u7C7B\u578B\u7B49\u7B49\uFF1B\u201D\u6570\u636E\u201D\u5219\u662F\u6570\u636E\u5305\u7684\u5177\u4F53\u5185\u5BB9\u3002\u201D\u6807\u5934\u201D\u7684\u957F\u5EA6\uFF0C\u56FA\u5B9A\u4E3A18\u5B57\u8282\u3002\u201D\u6570\u636E\u201D\u7684\u957F\u5EA6\uFF0C\u6700\u77ED\u4E3A46\u5B57\u8282\uFF0C\u6700\u957F\u4E3A1500\u5B57\u8282\u3002\u56E0\u6B64\uFF0C\u6574\u4E2A\u201D\u5E27\u201D\u6700\u77ED\u4E3A64\u5B57\u8282\uFF0C\u6700\u957F\u4E3A1518\u5B57\u8282\u3002\u5982\u679C\u6570\u636E\u5F88\u957F\uFF0C\u5C31\u5FC5\u987B\u5206\u5272\u6210\u591A\u4E2A\u5E27\u8FDB\u884C\u53D1\u9001\u3002</p><p>\u90A3\u4E48\uFF0C\u53D1\u9001\u8005\u548C\u63A5\u53D7\u8005\u662F\u5982\u4F55\u6807\u8BC6\u5462\uFF1F\u4EE5\u592A\u7F51\u89C4\u5B9A\uFF0C\u8FDE\u5165\u7F51\u7EDC\u7684\u6240\u6709\u8BBE\u5907\u90FD\u5FC5\u987B\u5177\u6709\u201D\u7F51\u5361\u201D\u63A5\u53E3\u3002\u6570\u636E\u5305\u5FC5\u987B\u662F\u4ECE\u4E00\u5757\u7F51\u5361\uFF0C\u4F20\u9001\u5230\u53E6\u4E00\u5757\u7F51\u5361\u3002\u7F51\u5361\u7684\u5730\u5740\uFF0C\u5C31\u662F\u6570\u636E\u5305\u7684\u53D1\u9001\u5730\u5740\u548C\u63A5\u6536\u5730\u5740\uFF0C\u8FD9\u53EB\u505AMAC\u5730\u5740\u3002\u6BCF\u5757\u7F51\u5361\u51FA\u5382\u7684\u65F6\u5019\uFF0C\u90FD\u6709\u4E00\u4E2A\u5168\u4E16\u754C\u72EC\u4E00\u65E0\u4E8C\u7684MAC\u5730\u5740\uFF0C\u957F\u5EA6\u662F48\u4E2A\u4E8C\u8FDB\u5236\u4F4D\uFF0C\u901A\u5E38\u752812\u4E2A\u5341\u516D\u8FDB\u5236\u6570\u8868\u793A\u3002\u524D6\u4E2A\u5341\u516D\u8FDB\u5236\u6570\u662F\u5382\u5546\u7F16\u53F7\uFF0C\u540E6\u4E2A\u662F\u8BE5\u5382\u5546\u7684\u7F51\u5361\u6D41\u6C34\u53F7\u3002\u6709\u4E86MAC\u5730\u5740\uFF0C\u5C31\u53EF\u4EE5\u5B9A\u4F4D\u7F51\u5361\u548C\u6570\u636E\u5305\u7684\u8DEF\u5F84\u4E86\u3002</p><p>\u6211\u4EEC\u4F1A\u901A\u8FC7ARP\u534F\u8BAE\u6765\u83B7\u53D6\u63A5\u53D7\u65B9\u7684MAC\u5730\u5740\uFF0C\u6709\u4E86MAC\u5730\u5740\u4E4B\u540E\uFF0C\u5982\u4F55\u628A\u6570\u636E\u51C6\u786E\u7684\u53D1\u9001\u7ED9\u63A5\u6536\u65B9\u5462\uFF1F\u5176\u5B9E\u8FD9\u91CC\u4EE5\u592A\u7F51\u91C7\u7528\u4E86\u4E00\u79CD\u5F88\u201D\u539F\u59CB\u201D\u7684\u65B9\u5F0F\uFF0C\u5B83\u4E0D\u662F\u628A\u6570\u636E\u5305\u51C6\u786E\u9001\u5230\u63A5\u6536\u65B9\uFF0C\u800C\u662F\u5411\u672C\u7F51\u7EDC\u5185\u6240\u6709\u8BA1\u7B97\u673A\u90FD\u53D1\u9001\uFF0C\u8BA9\u6BCF\u53F0\u8BA1\u7B97\u673A\u8BFB\u53D6\u8FD9\u4E2A\u5305\u7684\u201D\u6807\u5934\u201D\uFF0C\u627E\u5230\u63A5\u6536\u65B9\u7684MAC\u5730\u5740\uFF0C\u7136\u540E\u4E0E\u81EA\u8EAB\u7684MAC\u5730\u5740\u76F8\u6BD4\u8F83\uFF0C\u5982\u679C\u4E24\u8005\u76F8\u540C\uFF0C\u5C31\u63A5\u53D7\u8FD9\u4E2A\u5305\uFF0C\u505A\u8FDB\u4E00\u6B65\u5904\u7406\uFF0C\u5426\u5219\u5C31\u4E22\u5F03\u8FD9\u4E2A\u5305\u3002\u8FD9\u79CD\u53D1\u9001\u65B9\u5F0F\u5C31\u53EB\u505A\u201D\u5E7F\u64AD\u201D\uFF08broadcasting\uFF09\u3002</p><h4 id="\u7F51\u7EDC\u5C42" tabindex="-1"><a class="header-anchor" href="#\u7F51\u7EDC\u5C42" aria-hidden="true">#</a> \u7F51\u7EDC\u5C42</h4><p>\u6309\u7167\u4EE5\u592A\u7F51\u534F\u8BAE\u7684\u89C4\u5219\u6211\u4EEC\u53EF\u4EE5\u4F9D\u9760MAC\u5730\u5740\u6765\u5411\u5916\u53D1\u9001\u6570\u636E\u3002\u7406\u8BBA\u4E0A\u4F9D\u9760MAC\u5730\u5740\uFF0C\u4F60\u7535\u8111\u7684\u7F51\u5361\u5C31\u53EF\u4EE5\u627E\u5230\u8EAB\u5728\u4E16\u754C\u53E6\u4E00\u4E2A\u89D2\u843D\u7684\u67D0\u53F0\u7535\u8111\u7684\u7F51\u5361\u4E86\uFF0C\u4F46\u662F\u8FD9\u79CD\u505A\u6CD5\u6709\u4E00\u4E2A\u91CD\u5927\u7F3A\u9677\u5C31\u662F\u4EE5\u592A\u7F51\u91C7\u7528\u5E7F\u64AD\u65B9\u5F0F\u53D1\u9001\u6570\u636E\u5305\uFF0C\u6240\u6709\u6210\u5458\u4EBA\u624B\u4E00\u201D\u5305\u201D\uFF0C\u4E0D\u4EC5\u6548\u7387\u4F4E\uFF0C\u800C\u4E14\u53D1\u9001\u7684\u6570\u636E\u53EA\u80FD\u5C40\u9650\u5728\u53D1\u9001\u8005\u6240\u5728\u7684\u5B50\u7F51\u7EDC\u3002\u4E5F\u5C31\u662F\u8BF4\u5982\u679C\u4E24\u53F0\u8BA1\u7B97\u673A\u4E0D\u5728\u540C\u4E00\u4E2A\u5B50\u7F51\u7EDC\uFF0C\u5E7F\u64AD\u662F\u4F20\u4E0D\u8FC7\u53BB\u7684\u3002\u8FD9\u79CD\u8BBE\u8BA1\u662F\u5408\u7406\u4E14\u5FC5\u8981\u7684\uFF0C\u56E0\u4E3A\u5982\u679C\u4E92\u8054\u7F51\u4E0A\u6BCF\u4E00\u53F0\u8BA1\u7B97\u673A\u90FD\u4F1A\u6536\u5230\u4E92\u8054\u7F51\u4E0A\u6536\u53D1\u7684\u6240\u6709\u6570\u636E\u5305\uFF0C\u90A3\u662F\u4E0D\u73B0\u5B9E\u7684\u3002</p><p>\u56E0\u6B64\uFF0C\u5FC5\u987B\u627E\u5230\u4E00\u79CD\u65B9\u6CD5\u533A\u5206\u54EA\u4E9BMAC\u5730\u5740\u5C5E\u4E8E\u540C\u4E00\u4E2A\u5B50\u7F51\u7EDC\uFF0C\u54EA\u4E9B\u4E0D\u662F\u3002\u5982\u679C\u662F\u540C\u4E00\u4E2A\u5B50\u7F51\u7EDC\uFF0C\u5C31\u91C7\u7528\u5E7F\u64AD\u65B9\u5F0F\u53D1\u9001\uFF0C\u5426\u5219\u5C31\u91C7\u7528\u201D\u8DEF\u7531\u201D\u65B9\u5F0F\u53D1\u9001\u3002\u8FD9\u5C31\u5BFC\u81F4\u4E86\u201D\u7F51\u7EDC\u5C42\u201D\u7684\u8BDE\u751F\u3002\u5B83\u7684\u4F5C\u7528\u662F\u5F15\u8FDB\u4E00\u5957\u65B0\u7684\u5730\u5740\uFF0C\u4F7F\u5F97\u6211\u4EEC\u80FD\u591F\u533A\u5206\u4E0D\u540C\u7684\u8BA1\u7B97\u673A\u662F\u5426\u5C5E\u4E8E\u540C\u4E00\u4E2A\u5B50\u7F51\u7EDC\u3002\u8FD9\u5957\u5730\u5740\u5C31\u53EB\u505A\u201D\u7F51\u7EDC\u5730\u5740\u201D\uFF0C\u7B80\u79F0\u201D\u7F51\u5740\u201D\u3002</p><p>\u201C\u7F51\u7EDC\u5C42\u201D\u51FA\u73B0\u4EE5\u540E\uFF0C\u6BCF\u53F0\u8BA1\u7B97\u673A\u6709\u4E86\u4E24\u79CD\u5730\u5740\uFF0C\u4E00\u79CD\u662FMAC\u5730\u5740\uFF0C\u53E6\u4E00\u79CD\u662F\u7F51\u7EDC\u5730\u5740\u3002\u4E24\u79CD\u5730\u5740\u4E4B\u95F4\u6CA1\u6709\u4EFB\u4F55\u8054\u7CFB\uFF0CMAC\u5730\u5740\u662F\u7ED1\u5B9A\u5728\u7F51\u5361\u4E0A\u7684\uFF0C\u7F51\u7EDC\u5730\u5740\u5219\u662F\u7F51\u7EDC\u7BA1\u7406\u5458\u5206\u914D\u7684\u3002\u7F51\u7EDC\u5730\u5740\u5E2E\u52A9\u6211\u4EEC\u786E\u5B9A\u8BA1\u7B97\u673A\u6240\u5728\u7684\u5B50\u7F51\u7EDC\uFF0CMAC\u5730\u5740\u5219\u5C06\u6570\u636E\u5305\u9001\u5230\u8BE5\u5B50\u7F51\u7EDC\u4E2D\u7684\u76EE\u6807\u7F51\u5361\u3002\u56E0\u6B64\uFF0C\u4ECE\u903B\u8F91\u4E0A\u53EF\u4EE5\u63A8\u65AD\uFF0C\u5FC5\u5B9A\u662F\u5148\u5904\u7406\u7F51\u7EDC\u5730\u5740\uFF0C\u7136\u540E\u518D\u5904\u7406MAC\u5730\u5740\u3002</p><p>\u89C4\u5B9A\u7F51\u7EDC\u5730\u5740\u7684\u534F\u8BAE\uFF0C\u53EB\u505AIP\u534F\u8BAE\u3002\u5B83\u6240\u5B9A\u4E49\u7684\u5730\u5740\uFF0C\u5C31\u88AB\u79F0\u4E3AIP\u5730\u5740\u3002\u76EE\u524D\uFF0C\u5E7F\u6CDB\u91C7\u7528\u7684\u662FIP\u534F\u8BAE\u7B2C\u56DB\u7248\uFF0C\u7B80\u79F0IPv4\u3002IPv4\u8FD9\u4E2A\u7248\u672C\u89C4\u5B9A\uFF0C\u7F51\u7EDC\u5730\u5740\u753132\u4E2A\u4E8C\u8FDB\u5236\u4F4D\u7EC4\u6210\uFF0C\u6211\u4EEC\u901A\u5E38\u4E60\u60EF\u7528\u5206\u6210\u56DB\u6BB5\u7684\u5341\u8FDB\u5236\u6570\u8868\u793AIP\u5730\u5740\uFF0C\u4ECE0.0.0.0\u4E00\u76F4\u5230255.255.255.255\u3002</p><p>\u6839\u636EIP\u534F\u8BAE\u53D1\u9001\u7684\u6570\u636E\uFF0C\u5C31\u53EB\u505AIP\u6570\u636E\u5305\u3002IP\u6570\u636E\u5305\u4E5F\u5206\u4E3A\u201D\u6807\u5934\u201D\u548C\u201D\u6570\u636E\u201D\u4E24\u4E2A\u90E8\u5206\uFF1A\u201D\u6807\u5934\u201D\u90E8\u5206\u4E3B\u8981\u5305\u62EC\u7248\u672C\u3001\u957F\u5EA6\u3001IP\u5730\u5740\u7B49\u4FE1\u606F\uFF0C\u201D\u6570\u636E\u201D\u90E8\u5206\u5219\u662FIP\u6570\u636E\u5305\u7684\u5177\u4F53\u5185\u5BB9\u3002IP\u6570\u636E\u5305\u7684\u201D\u6807\u5934\u201D\u90E8\u5206\u7684\u957F\u5EA6\u4E3A20\u523060\u5B57\u8282\uFF0C\u6574\u4E2A\u6570\u636E\u5305\u7684\u603B\u957F\u5EA6\u6700\u5927\u4E3A65535\u5B57\u8282\u3002</p><h4 id="\u4F20\u8F93\u5C42" tabindex="-1"><a class="header-anchor" href="#\u4F20\u8F93\u5C42" aria-hidden="true">#</a> \u4F20\u8F93\u5C42</h4><p>\u6709\u4E86MAC\u5730\u5740\u548CIP\u5730\u5740\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u53EF\u4EE5\u5728\u4E92\u8054\u7F51\u4E0A\u4EFB\u610F\u4E24\u53F0\u4E3B\u673A\u4E0A\u5EFA\u7ACB\u901A\u4FE1\u3002\u4F46\u95EE\u9898\u662F\u540C\u4E00\u53F0\u4E3B\u673A\u4E0A\u4F1A\u6709\u8BB8\u591A\u7A0B\u5E8F\u90FD\u9700\u8981\u7528\u7F51\u7EDC\u6536\u53D1\u6570\u636E\uFF0C\u6BD4\u5982QQ\u548C\u6D4F\u89C8\u5668\u8FD9\u4E24\u4E2A\u7A0B\u5E8F\u90FD\u9700\u8981\u8FDE\u63A5\u4E92\u8054\u7F51\u5E76\u6536\u53D1\u6570\u636E\uFF0C\u6211\u4EEC\u5982\u4F55\u533A\u5206\u67D0\u4E2A\u6570\u636E\u5305\u5230\u5E95\u662F\u5F52\u54EA\u4E2A\u7A0B\u5E8F\u7684\u5462\uFF1F\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6211\u4EEC\u8FD8\u9700\u8981\u4E00\u4E2A\u53C2\u6570\uFF0C\u8868\u793A\u8FD9\u4E2A\u6570\u636E\u5305\u5230\u5E95\u4F9B\u54EA\u4E2A\u7A0B\u5E8F\uFF08\u8FDB\u7A0B\uFF09\u4F7F\u7528\u3002\u8FD9\u4E2A\u53C2\u6570\u5C31\u53EB\u505A\u201D\u7AEF\u53E3\u201D\uFF08port\uFF09\uFF0C\u5B83\u5176\u5B9E\u662F\u6BCF\u4E00\u4E2A\u4F7F\u7528\u7F51\u5361\u7684\u7A0B\u5E8F\u7684\u7F16\u53F7\u3002\u6BCF\u4E2A\u6570\u636E\u5305\u90FD\u53D1\u5230\u6307\u5B9A\u7F51\u5361\u7684\u7279\u5B9A\u7AEF\u53E3\uFF0C\u6240\u4EE5\u4E0D\u540C\u7684\u7A0B\u5E8F\u5C31\u80FD\u53D6\u5230\u81EA\u5DF1\u6240\u9700\u8981\u7684\u6570\u636E\u3002</p><p>\u201C\u7AEF\u53E3\u201D\u662F0\u523065535\u4E4B\u95F4\u7684\u4E00\u4E2A\u6574\u6570\uFF0C\u6B63\u597D16\u4E2A\u4E8C\u8FDB\u5236\u4F4D\u30020\u52301023\u7684\u7AEF\u53E3\u88AB\u7CFB\u7EDF\u5360\u7528\uFF0C\u7528\u6237\u53EA\u80FD\u9009\u7528\u5927\u4E8E1023\u7684\u7AEF\u53E3\u3002\u6709\u4E86IP\u548C\u7AEF\u53E3\u6211\u4EEC\u5C31\u80FD\u5B9E\u73B0\u552F\u4E00\u786E\u5B9A\u4E92\u8054\u7F51\u4E0A\u4E00\u4E2A\u7A0B\u5E8F\uFF0C\u8FDB\u800C\u5B9E\u73B0\u7F51\u7EDC\u95F4\u7684\u7A0B\u5E8F\u901A\u4FE1\u3002</p><p>\u6211\u4EEC\u5FC5\u987B\u5728\u6570\u636E\u5305\u4E2D\u52A0\u5165\u7AEF\u53E3\u4FE1\u606F\uFF0C\u8FD9\u5C31\u9700\u8981\u65B0\u7684\u534F\u8BAE\u3002\u6700\u7B80\u5355\u7684\u5B9E\u73B0\u53EB\u505AUDP\u534F\u8BAE\uFF0C\u5B83\u7684\u683C\u5F0F\u51E0\u4E4E\u5C31\u662F\u5728\u6570\u636E\u524D\u9762\uFF0C\u52A0\u4E0A\u7AEF\u53E3\u53F7\u3002UDP\u6570\u636E\u5305\uFF0C\u4E5F\u662F\u7531\u201D\u6807\u5934\u201D\u548C\u201D\u6570\u636E\u201D\u4E24\u90E8\u5206\u7EC4\u6210\uFF1A\u201D\u6807\u5934\u201D\u90E8\u5206\u4E3B\u8981\u5B9A\u4E49\u4E86\u53D1\u51FA\u7AEF\u53E3\u548C\u63A5\u6536\u7AEF\u53E3\uFF0C\u201D\u6570\u636E\u201D\u90E8\u5206\u5C31\u662F\u5177\u4F53\u7684\u5185\u5BB9\u3002UDP\u6570\u636E\u5305\u975E\u5E38\u7B80\u5355\uFF0C\u201D\u6807\u5934\u201D\u90E8\u5206\u4E00\u5171\u53EA\u67098\u4E2A\u5B57\u8282\uFF0C\u603B\u957F\u5EA6\u4E0D\u8D85\u8FC765,535\u5B57\u8282\uFF0C\u6B63\u597D\u653E\u8FDB\u4E00\u4E2AIP\u6570\u636E\u5305\u3002</p><p>UDP\u534F\u8BAE\u7684\u4F18\u70B9\u662F\u6BD4\u8F83\u7B80\u5355\uFF0C\u5BB9\u6613\u5B9E\u73B0\uFF0C\u4F46\u662F\u7F3A\u70B9\u662F\u53EF\u9760\u6027\u8F83\u5DEE\uFF0C\u4E00\u65E6\u6570\u636E\u5305\u53D1\u51FA\uFF0C\u65E0\u6CD5\u77E5\u9053\u5BF9\u65B9\u662F\u5426\u6536\u5230\u3002\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u63D0\u9AD8\u7F51\u7EDC\u53EF\u9760\u6027\uFF0CTCP\u534F\u8BAE\u5C31\u8BDE\u751F\u4E86\u3002TCP\u534F\u8BAE\u80FD\u591F\u786E\u4FDD\u6570\u636E\u4E0D\u4F1A\u9057\u5931\u3002\u5B83\u7684\u7F3A\u70B9\u662F\u8FC7\u7A0B\u590D\u6742\u3001\u5B9E\u73B0\u56F0\u96BE\u3001\u6D88\u8017\u8F83\u591A\u7684\u8D44\u6E90\u3002TCP\u6570\u636E\u5305\u6CA1\u6709\u957F\u5EA6\u9650\u5236\uFF0C\u7406\u8BBA\u4E0A\u53EF\u4EE5\u65E0\u9650\u957F\uFF0C\u4F46\u662F\u4E3A\u4E86\u4FDD\u8BC1\u7F51\u7EDC\u7684\u6548\u7387\uFF0C\u901A\u5E38TCP\u6570\u636E\u5305\u7684\u957F\u5EA6\u4E0D\u4F1A\u8D85\u8FC7IP\u6570\u636E\u5305\u7684\u957F\u5EA6\uFF0C\u4EE5\u786E\u4FDD\u5355\u4E2ATCP\u6570\u636E\u5305\u4E0D\u5FC5\u518D\u5206\u5272\u3002</p><h4 id="\u5E94\u7528\u5C42" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528\u5C42" aria-hidden="true">#</a> \u5E94\u7528\u5C42</h4><p>\u5E94\u7528\u7A0B\u5E8F\u6536\u5230\u201D\u4F20\u8F93\u5C42\u201D\u7684\u6570\u636E\uFF0C\u63A5\u4E0B\u6765\u5C31\u8981\u5BF9\u6570\u636E\u8FDB\u884C\u89E3\u5305\u3002\u7531\u4E8E\u4E92\u8054\u7F51\u662F\u5F00\u653E\u67B6\u6784\uFF0C\u6570\u636E\u6765\u6E90\u4E94\u82B1\u516B\u95E8\uFF0C\u5FC5\u987B\u4E8B\u5148\u89C4\u5B9A\u597D\u901A\u4FE1\u7684\u6570\u636E\u683C\u5F0F\uFF0C\u5426\u5219\u63A5\u6536\u65B9\u6839\u672C\u65E0\u6CD5\u83B7\u5F97\u771F\u6B63\u53D1\u9001\u7684\u6570\u636E\u5185\u5BB9\u3002\u201D\u5E94\u7528\u5C42\u201D\u7684\u4F5C\u7528\u5C31\u662F\u89C4\u5B9A\u5E94\u7528\u7A0B\u5E8F\u4F7F\u7528\u7684\u6570\u636E\u683C\u5F0F\uFF0C\u4F8B\u5982\u6211\u4EECTCP\u534F\u8BAE\u4E4B\u4E0A\u5E38\u89C1\u7684Email\u3001HTTP\u3001FTP\u7B49\u534F\u8BAE\uFF0C\u8FD9\u4E9B\u534F\u8BAE\u5C31\u7EC4\u6210\u4E86\u4E92\u8054\u7F51\u534F\u8BAE\u7684\u5E94\u7528\u5C42\u3002</p><h3 id="socket\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#socket\u7F16\u7A0B" aria-hidden="true">#</a> Socket\u7F16\u7A0B</h3><p>Socket\u662FBSD UNIX\u7684\u8FDB\u7A0B\u901A\u4FE1\u673A\u5236\uFF0C\u901A\u5E38\u4E5F\u79F0\u4F5C\u201D\u5957\u63A5\u5B57\u201D\uFF0C\u7528\u4E8E\u63CF\u8FF0IP\u5730\u5740\u548C\u7AEF\u53E3\uFF0C\u662F\u4E00\u4E2A\u901A\u4FE1\u94FE\u7684\u53E5\u67C4\u3002Socket\u53EF\u4EE5\u7406\u89E3\u4E3ATCP/IP\u7F51\u7EDC\u7684API\uFF0C\u5B83\u5B9A\u4E49\u4E86\u8BB8\u591A\u51FD\u6570\u6216\u4F8B\u7A0B\uFF0C\u7A0B\u5E8F\u5458\u53EF\u4EE5\u7528\u5B83\u4EEC\u6765\u5F00\u53D1TCP/IP\u7F51\u7EDC\u4E0A\u7684\u5E94\u7528\u7A0B\u5E8F\u3002\u7535\u8111\u4E0A\u8FD0\u884C\u7684\u5E94\u7528\u7A0B\u5E8F\u901A\u5E38\u901A\u8FC7\u201D\u5957\u63A5\u5B57\u201D\u5411\u7F51\u7EDC\u53D1\u51FA\u8BF7\u6C42\u6216\u8005\u5E94\u7B54\u7F51\u7EDC\u8BF7\u6C42\u3002</p><h4 id="socket\u56FE\u89E3" tabindex="-1"><a class="header-anchor" href="#socket\u56FE\u89E3" aria-hidden="true">#</a> socket\u56FE\u89E3</h4><p>Socket\u662F\u5E94\u7528\u5C42\u4E0ETCP/IP\u534F\u8BAE\u65CF\u901A\u4FE1\u7684<strong>\u4E2D\u95F4\u8F6F\u4EF6\u62BD\u8C61\u5C42</strong>\u3002\u5728\u8BBE\u8BA1\u6A21\u5F0F\u4E2D\uFF0CSocket\u5176\u5B9E\u5C31\u662F\u4E00\u4E2A\u95E8\u9762\u6A21\u5F0F\uFF0C\u5B83\u628A\u590D\u6742\u7684TCP/IP\u534F\u8BAE\u65CF\u9690\u85CF\u5728Socket\u540E\u9762\uFF0C\u5BF9\u7528\u6237\u6765\u8BF4\u53EA\u9700\u8981\u8C03\u7528Socket\u89C4\u5B9A\u7684\u76F8\u5173\u51FD\u6570\uFF0C\u8BA9Socket\u53BB\u7EC4\u7EC7\u7B26\u5408\u6307\u5B9A\u7684\u534F\u8BAE\u6570\u636E\uFF0C\u7136\u540E\u8FDB\u884C\u901A\u4FE1\u3002</p><p><img src="'+t+`" alt=""></p><ul><li>Socket\u53C8\u79F0<strong>\u5957\u63A5\u5B57</strong>\uFF0C\u5E94\u7528\u7A0B\u5E8F\u901A\u5E38\u901A\u8FC7<strong>\u5957\u63A5\u5B57</strong>\u5411\u7F51\u7EDC\u53D1\u51FA\u8BF7\u6C42\u6216\u8005\u5E94\u7B54\u7F51\u7EDC\u8BF7\u6C42</li><li>\u5E38\u7528\u7684Socket\u7C7B\u578B\u6709\u4E24\u79CD\uFF1A <ul><li>\u6D41\u5F0FSocket <ul><li>\u6D41\u5F0F\u662F\u4E00\u79CD\u9762\u5411\u8FDE\u63A5\u7684Socket\uFF0C\u9488\u5BF9\u4E8E\u9762\u5411\u8FDE\u63A5\u7684TCP\u670D\u52A1\u5E94\u7528</li><li>TCP\uFF1A\u6BD4\u8F83\u9760\u8C31\uFF0C\u9762\u5411\u8FDE\u63A5\uFF0C\u6BD4\u8F83\u6162</li></ul></li><li>\u6570\u636E\u62A5\u5F0FSocket <ul><li>\u6570\u636E\u62A5\u5F0FSocket\u662F\u4E00\u79CD\u65E0\u8FDE\u63A5\u7684Socket\uFF0C\u9488\u5BF9\u4E8E\u65E0\u8FDE\u63A5\u7684UDP\u670D\u52A1\u5E94\u7528</li><li>UDP\uFF1A\u4E0D\u662F\u592A\u9760\u8C31\uFF0C\u6BD4\u8F83\u5FEB</li></ul></li></ul></li></ul><h3 id="\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898" aria-hidden="true">#</a> \u95EE\u9898</h3><div class="custom-container tip"><p class="custom-container-title">\u95EE\u9898\u4E00</p><p>\u53D1\u9001\u8005\u5982\u4F55\u77E5\u9053\u63A5\u6536\u8005\u7684MAC\u5730\u5740\uFF1F</p></div><p>ARP\u534F\u8BAE</p><div class="custom-container tip"><p class="custom-container-title">\u95EE\u9898\u4E8C</p><p>\u53D1\u9001\u8005\u5982\u4F55\u77E5\u9053\u63A5\u6536\u8005\u548C\u81EA\u5DF1\u540C\u5C5E\u4E00\u4E2A\u5B50\u7F51?</p></div><p>\u901A\u8FC7\u5B50\u7F51\u63A9\u7801\u548CIP\u5730\u5740\u8FDB\u884C\u8BA1\u7B97\uFF0C\u5224\u65AD\u4E24\u4E2A\u4E3B\u673A\u662F\u5426\u5C5E\u4E8E\u540C\u4E00\u4E2A\u7F51\u7EDC\u5730\u5740\u3002\u5982\u679C\u662F\u540C\u4E00\u4E2A\u7F51\u7EDC\u5730\u5740\uFF0C\u5C31\u5C5E\u4E8E\u540C\u4E00\u4E2A\u5B50\u7F51\uFF0C\u5426\u5219\u5C31\u4E0D\u5728\u540C\u4E00\u4E2A\u5B50\u7F51\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u95EE\u9898\u4E09</p><p>\u5982\u679C\u63A5\u6536\u8005\u548C\u81EA\u5DF1\u4E0D\u5728\u540C\u4E00\u4E2A\u5B50\u7F51\uFF0C\u6570\u636E\u5305\u5982\u4F55\u53D1\u9001\u7ED9\u5BF9\u65B9\uFF1F</p></div><p>\u4E3B\u673A\u5C06\u6570\u636E\u53D1\u9001\u81F3\u8DEF\u7531\u5668\uFF0C\u8DEF\u7531\u5668\u67E5\u8BE2\u8DEF\u7531\u8868\u518D\u5C06\u6570\u636E\u53D1\u9001\u51FA\u53BB\u3002</p><h2 id="tcp-\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#tcp-\u901A\u4FE1" aria-hidden="true">#</a> TCP \u901A\u4FE1</h2><h3 id="server" tabindex="-1"><a class="header-anchor" href="#server" aria-hidden="true">#</a> Server</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;net&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//1\u3001\u76D1\u542C\u7AEF\u53E3</span>
	listener<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0.0.0.0:9090&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;listen fail, err: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	<span class="token comment">//2.\u5EFA\u7ACB\u5957\u63A5\u5B57\u8FDE\u63A5</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> listener<span class="token punctuation">.</span><span class="token function">Accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;accept fail, err: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">continue</span>
		<span class="token punctuation">}</span>

		<span class="token comment">//3. \u521B\u5EFA\u5904\u7406\u534F\u7A0B</span>
		<span class="token keyword">go</span> <span class="token function">process</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">process</span><span class="token punctuation">(</span>conn net<span class="token punctuation">.</span>Conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment">//\u601D\u8003\u9898\uFF1A\u8FD9\u91CC\u4E0D\u586B\u5199\u4F1A\u6709\u5565\u95EE\u9898\uFF1F</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> buf <span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
		n<span class="token punctuation">,</span> err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;read from connect failed, err: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>
		str <span class="token operator">:=</span> <span class="token function">string</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;receive from client, data: %v\\n&quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div></details><h3 id="client" tabindex="-1"><a class="header-anchor" href="#client" aria-hidden="true">#</a> Client</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main 

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;bufio&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;net&quot;</span>
	<span class="token string">&quot;os&quot;</span>
	<span class="token string">&quot;strings&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
	<span class="token function">doSend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;doSend over&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token keyword">func</span> <span class="token function">doSend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//1\u3001\u8FDE\u63A5\u670D\u52A1\u5668</span>
	conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;localhost:9090&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;connect failed, err : %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment">//\u601D\u8003\u9898\uFF1A\u8FD9\u91CC\u4E0D\u586B\u5199\u4F1A\u6709\u5565\u95EE\u9898\uFF1F</span>
	<span class="token comment">//2\u3001\u8BFB\u53D6\u547D\u4EE4\u884C\u8F93\u5165</span>
	inputReader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdin<span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		<span class="token comment">// 3\u3001\u4E00\u76F4\u8BFB\u53D6\u76F4\u5230\u8BFB\u5230\\n</span>
		input<span class="token punctuation">,</span> err <span class="token operator">:=</span> inputReader<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;read from console failed, err: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 4\u3001\u8BFB\u53D6Q\u65F6\u505C\u6B62</span>
		trimmedInput <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">TrimSpace</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span>
		<span class="token keyword">if</span> trimmedInput <span class="token operator">==</span> <span class="token string">&quot;Q&quot;</span> <span class="token punctuation">{</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 5\u3001\u56DE\u590D\u670D\u52A1\u5668\u4FE1\u606F</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>trimmedInput<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;write failed , err : %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div></details><h2 id="udp-\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#udp-\u901A\u4FE1" aria-hidden="true">#</a> UDP \u901A\u4FE1</h2><h3 id="server-1" tabindex="-1"><a class="header-anchor" href="#server-1" aria-hidden="true">#</a> Server</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;net&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//step 1 \u76D1\u542C\u670D\u52A1\u5668</span>
	listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">ListenUDP</span><span class="token punctuation">(</span><span class="token string">&quot;udp&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>net<span class="token punctuation">.</span>UDPAddr<span class="token punctuation">{</span>
		IP<span class="token punctuation">:</span>   net<span class="token punctuation">.</span><span class="token function">IPv4</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		Port<span class="token punctuation">:</span> <span class="token number">9090</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;listen failed, err:%v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	<span class="token comment">//step 2 \u5FAA\u73AF\u8BFB\u53D6\u6D88\u606F\u5185\u5BB9</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> data <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
		n<span class="token punctuation">,</span> addr<span class="token punctuation">,</span> err <span class="token operator">:=</span> listen<span class="token punctuation">.</span><span class="token function">ReadFromUDP</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;read failed from addr: %v, err: %v\\n&quot;</span><span class="token punctuation">,</span> addr<span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">//todo sth</span>
			<span class="token comment">//step 3 \u56DE\u590D\u6570\u636E</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;addr: %v data: %v  count: %v\\n&quot;</span><span class="token punctuation">,</span> addr<span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>
			<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> listen<span class="token punctuation">.</span><span class="token function">WriteToUDP</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;received success!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> addr<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;write failed, err: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div></details><h3 id="client-1" tabindex="-1"><a class="header-anchor" href="#client-1" aria-hidden="true">#</a> Client</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;net&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//step 1 \u8FDE\u63A5\u670D\u52A1\u5668</span>
	conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">DialUDP</span><span class="token punctuation">(</span><span class="token string">&quot;udp&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>net<span class="token punctuation">.</span>UDPAddr<span class="token punctuation">{</span>
		IP<span class="token punctuation">:</span>   net<span class="token punctuation">.</span><span class="token function">IPv4</span><span class="token punctuation">(</span><span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		Port<span class="token punctuation">:</span> <span class="token number">9090</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;connect failed, err: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token comment">//step 2 \u53D1\u9001\u6570\u636E</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;hello server!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;send data failed, err : %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>

		<span class="token comment">//step 3 \u63A5\u6536\u6570\u636E</span>
		result <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span>
		n<span class="token punctuation">,</span> remoteAddr<span class="token punctuation">,</span> err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">ReadFromUDP</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;receive data failed, err: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;receive from addr: %v  data: %v\\n&quot;</span><span class="token punctuation">,</span> remoteAddr<span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div></details><h2 id="http-\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#http-\u901A\u4FE1" aria-hidden="true">#</a> HTTP \u901A\u4FE1</h2><h3 id="server-2" tabindex="-1"><a class="header-anchor" href="#server-2" aria-hidden="true">#</a> Server</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;net/http&quot;</span>
	<span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> <span class="token punctuation">(</span>
	Addr <span class="token operator">=</span> <span class="token string">&quot;:1210&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u521B\u5EFA\u8DEF\u7531\u5668</span>
	mux <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">NewServeMux</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// \u8BBE\u7F6E\u8DEF\u7531\u89C4\u5219</span>
	mux<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/bye&quot;</span><span class="token punctuation">,</span> sayBye<span class="token punctuation">)</span>
	<span class="token comment">// \u521B\u5EFA\u670D\u52A1\u5668</span>
	server <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">{</span>
		Addr<span class="token punctuation">:</span>         Addr<span class="token punctuation">,</span>
		WriteTimeout<span class="token punctuation">:</span> time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span>
		Handler<span class="token punctuation">:</span>      mux<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u76D1\u542C\u7AEF\u53E3\u5E76\u63D0\u4F9B\u670D\u52A1</span>
	log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Starting httpserver at &quot;</span><span class="token operator">+</span>Addr<span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>server<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">sayBye</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	w<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;bye bye ,this is httpServer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div></details><h3 id="client-2" tabindex="-1"><a class="header-anchor" href="#client-2" aria-hidden="true">#</a> Client</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;io/ioutil&quot;</span>
	<span class="token string">&quot;net&quot;</span>
	<span class="token string">&quot;net/http&quot;</span>
	<span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u521B\u5EFA\u8FDE\u63A5\u6C60</span>
	transport <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Transport<span class="token punctuation">{</span>
		DialContext<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>net<span class="token punctuation">.</span>Dialer<span class="token punctuation">{</span>
			Timeout<span class="token punctuation">:</span>   <span class="token number">30</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">//\u8FDE\u63A5\u8D85\u65F6</span>
			KeepAlive<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">//\u63A2\u6D3B\u65F6\u95F4</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DialContext<span class="token punctuation">,</span>
		MaxIdleConns<span class="token punctuation">:</span>          <span class="token number">100</span><span class="token punctuation">,</span>              <span class="token comment">//\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5</span>
		IdleConnTimeout<span class="token punctuation">:</span>       <span class="token number">90</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">//\u7A7A\u95F2\u8D85\u65F6\u65F6\u95F4</span>
		TLSHandshakeTimeout<span class="token punctuation">:</span>   <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">//tls\u63E1\u624B\u8D85\u65F6\u65F6\u95F4</span>
		ExpectContinueTimeout<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>  <span class="token comment">//100-continue\u72B6\u6001\u7801\u8D85\u65F6\u65F6\u95F4</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u521B\u5EFA\u5BA2\u6237\u7AEF</span>
	client <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Client<span class="token punctuation">{</span>
		Timeout<span class="token punctuation">:</span>   time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token comment">//\u8BF7\u6C42\u8D85\u65F6\u65F6\u95F4</span>
		Transport<span class="token punctuation">:</span> transport<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u8BF7\u6C42\u6570\u636E</span>
	resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;http://127.0.0.1:1210/bye&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// \u8BFB\u53D6\u5185\u5BB9</span>
	bds<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>bds<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div></details><h3 id="test" tabindex="-1"><a class="header-anchor" href="#test" aria-hidden="true">#</a> Test</h3><ul><li>\u57FA\u4E8E\u5305 <code>net/http/httptest</code> \uFF0C\u5BF9 <strong>http api</strong> \u8FDB\u884C <strong>Unit Test</strong>\u3002</li></ul><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;bytes&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;io/ioutil&quot;</span>
	<span class="token string">&quot;net/http&quot;</span>
	<span class="token string">&quot;net/http/httptest&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> HandlerFunc <span class="token keyword">func</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>f HandlerFunc<span class="token punctuation">)</span> <span class="token function">ServeHTTP</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">f</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> r<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	hf <span class="token operator">:=</span> <span class="token function">HandlerFunc</span><span class="token punctuation">(</span>HelloHandler<span class="token punctuation">)</span>

	resp <span class="token operator">:=</span> httptest<span class="token punctuation">.</span><span class="token function">NewRecorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	req <span class="token operator">:=</span> httptest<span class="token punctuation">.</span><span class="token function">NewRequest</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	hf<span class="token punctuation">.</span><span class="token function">ServeHTTP</span><span class="token punctuation">(</span>resp<span class="token punctuation">,</span> req<span class="token punctuation">)</span>

	bts<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>bts<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">HelloHandler</span><span class="token punctuation">(</span>res http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	res<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div></details><h2 id="tcp\u7C98\u5305" tabindex="-1"><a class="header-anchor" href="#tcp\u7C98\u5305" aria-hidden="true">#</a> TCP\u7C98\u5305</h2><h3 id="case" tabindex="-1"><a class="header-anchor" href="#case" aria-hidden="true">#</a> Case</h3><h4 id="server-3" tabindex="-1"><a class="header-anchor" href="#server-3" aria-hidden="true">#</a> Server</h4><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">process</span><span class="token punctuation">(</span>conn net<span class="token punctuation">.</span>Conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    reader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
    <span class="token keyword">var</span> buf <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        n<span class="token punctuation">,</span> err <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;read from client failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        recvStr <span class="token operator">:=</span> <span class="token function">string</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A&quot;</span><span class="token punctuation">,</span> recvStr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1:30000&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;listen failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> listen<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> listen<span class="token punctuation">.</span><span class="token function">Accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;accept failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">go</span> <span class="token function">process</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div></details><h4 id="client-3" tabindex="-1"><a class="header-anchor" href="#client-3" aria-hidden="true">#</a> Client</h4><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1:30000&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;dial failed, err&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        msg <span class="token operator">:=</span> <span class="token string">\`Hello, Hello. How are you?\`</span>
        conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></details><h4 id="result" tabindex="-1"><a class="header-anchor" href="#result" aria-hidden="true">#</a> Result</h4><ul><li>\u5148\u542F\u52A8\u670D\u52A1\u7AEF\u518D\u542F\u52A8\u5BA2\u6237\u7AEF\uFF0C\u53EF\u4EE5\u770B\u5230\u670D\u52A1\u7AEF\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B</li><li>\u5BA2\u6237\u7AEF\u520620\u6B21\u53D1\u9001\u7684\u6570\u636E\uFF0C\u5728\u670D\u52A1\u7AEF\u5E76\u6CA1\u6709\u6210\u529F\u7684\u8F93\u51FA20\u6B21\uFF0C\u800C\u662F\u591A\u6761\u6570\u636E\u201C\u7C98\u201D\u5230\u4E86\u4E00\u8D77</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?Hello, Hello. How are you?
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="why" tabindex="-1"><a class="header-anchor" href="#why" aria-hidden="true">#</a> Why</h3><ul><li><p>\u4E3B\u8981\u539F\u56E0\u5C31\u662F <strong>tcp\u6570\u636E\u4F20\u9012\u6A21\u5F0F</strong> \u662F<strong>\u6D41\u6A21\u5F0F</strong>\uFF0C\u5728\u4FDD\u6301\u957F\u8FDE\u63A5\u7684\u65F6\u5019\u53EF\u4EE5\u8FDB\u884C\u591A\u6B21\u7684\u6536\u548C\u53D1\u3002</p></li><li><p>\u201C\u7C98\u5305\u201D\u53EF\u53D1\u751F\u5728<strong>\u53D1\u9001\u7AEF</strong>\u4E5F\u53EF\u53D1\u751F\u5728<strong>\u63A5\u6536\u7AEF</strong></p><ul><li><strong>\u7531Nagle\u7B97\u6CD5\u9020\u6210\u7684\u53D1\u9001\u7AEF\u7684\u7C98\u5305</strong>\uFF1ANagle\u7B97\u6CD5\u662F\u4E00\u79CD\u6539\u5584\u7F51\u7EDC\u4F20\u8F93\u6548\u7387\u7684\u7B97\u6CD5\u3002\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u5F53\u6211\u4EEC\u63D0\u4EA4\u4E00\u6BB5\u6570\u636E\u7ED9TCP\u53D1\u9001\u65F6\uFF0CTCP\u5E76\u4E0D\u7ACB\u523B\u53D1\u9001\u6B64\u6BB5\u6570\u636E\uFF0C\u800C\u662F\u7B49\u5F85\u4E00\u5C0F\u6BB5\u65F6\u95F4\u770B\u770B\u5728\u7B49\u5F85\u671F\u95F4\u662F\u5426\u8FD8\u6709\u8981\u53D1\u9001\u7684\u6570\u636E\uFF0C\u82E5\u6709\u5219\u4F1A\u4E00\u6B21\u628A\u8FD9\u4E24\u6BB5\u6570\u636E\u53D1\u9001\u51FA\u53BB\u3002</li><li><strong>\u63A5\u6536\u7AEF\u63A5\u6536\u4E0D\u53CA\u65F6\u9020\u6210\u7684\u63A5\u6536\u7AEF\u7C98\u5305</strong>\uFF1ATCP\u4F1A\u628A\u63A5\u6536\u5230\u7684\u6570\u636E\u5B58\u5728\u81EA\u5DF1\u7684\u7F13\u51B2\u533A\u4E2D\uFF0C\u7136\u540E\u901A\u77E5\u5E94\u7528\u5C42\u53D6\u6570\u636E\u3002\u5F53\u5E94\u7528\u5C42\u7531\u4E8E\u67D0\u4E9B\u539F\u56E0\u4E0D\u80FD\u53CA\u65F6\u7684\u628ATCP\u7684\u6570\u636E\u53D6\u51FA\u6765\uFF0C\u5C31\u4F1A\u9020\u6210TCP\u7F13\u51B2\u533A\u4E2D\u5B58\u653E\u4E86\u51E0\u6BB5\u6570\u636E\u3002</li></ul></li></ul><h3 id="solution" tabindex="-1"><a class="header-anchor" href="#solution" aria-hidden="true">#</a> Solution</h3><ul><li><p>\u51FA\u73B0\u201D\u7C98\u5305\u201D\u7684\u5173\u952E\u5728\u4E8E<strong>\u63A5\u6536\u65B9\u4E0D\u786E\u5B9A\u5C06\u8981\u4F20\u8F93\u7684\u6570\u636E\u5305\u7684\u5927\u5C0F</strong>\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5BF9\u6570\u636E\u5305\u8FDB\u884C<strong>\u5C01\u5305</strong>\u548C<strong>\u62C6\u5305</strong>\u7684\u64CD\u4F5C\u3002</p></li><li><p>\u5C01\u5305\uFF1A\u5C01\u5305\u5C31\u662F\u7ED9\u4E00\u6BB5\u6570\u636E\u52A0\u4E0A\u5305\u5934\uFF0C\u8FD9\u6837\u4E00\u6765\u6570\u636E\u5305\u5C31\u5206\u4E3A\u5305\u5934\u548C\u5305\u4F53\u4E24\u90E8\u5206\u5185\u5BB9\u4E86(\u8FC7\u6EE4\u975E\u6CD5\u5305\u65F6\u5C01\u5305\u4F1A\u52A0\u5165\u201D\u5305\u5C3E\u201D\u5185\u5BB9)\u3002\u5305\u5934\u90E8\u5206\u7684\u957F\u5EA6\u662F\u56FA\u5B9A\u7684\uFF0C\u5E76\u4E14\u5B83\u5B58\u50A8\u4E86\u5305\u4F53\u7684\u957F\u5EA6\uFF0C\u6839\u636E\u5305\u5934\u957F\u5EA6\u56FA\u5B9A\u4EE5\u53CA\u5305\u5934\u4E2D\u542B\u6709\u5305\u4F53\u957F\u5EA6\u7684\u53D8\u91CF\u5C31\u80FD\u6B63\u786E\u7684\u62C6\u5206\u51FA\u4E00\u4E2A\u5B8C\u6574\u7684\u6570\u636E\u5305\u3002</p></li><li><p>\u53EF\u4EE5\u81EA\u5DF1\u5B9A\u4E49\u4E00\u4E2A\u534F\u8BAE\uFF0C\u6BD4\u5982\u6570\u636E\u5305\u7684\u524D4\u4E2A\u5B57\u8282\u4E3A\u5305\u5934\uFF0C\u91CC\u9762\u5B58\u50A8\u7684\u662F\u53D1\u9001\u7684\u6570\u636E\u7684\u957F\u5EA6\u3002</p></li></ul><p><strong>\u65B9\u5F0F\u4E00\uFF1Acontent_len+content</strong></p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// proto/proto.go</span>

<span class="token keyword">package</span> proto

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;bufio&quot;</span>
    <span class="token string">&quot;bytes&quot;</span>
    <span class="token string">&quot;encoding/binary&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// Encode \u5C06\u6D88\u606F\u7F16\u7801</span>
<span class="token keyword">func</span> <span class="token function">Encode</span><span class="token punctuation">(</span>message <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BFB\u53D6\u6D88\u606F\u7684\u957F\u5EA6\uFF0C\u8F6C\u6362\u6210int32\u7C7B\u578B\uFF08\u53604\u4E2A\u5B57\u8282\uFF09</span>
    <span class="token keyword">var</span> length <span class="token operator">=</span> <span class="token function">int32</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> pkg <span class="token operator">=</span> <span class="token function">new</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span>
    <span class="token comment">// \u5199\u5165\u6D88\u606F\u5934</span>
    err <span class="token operator">:=</span> binary<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>pkg<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">,</span> length<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5199\u5165\u6D88\u606F\u5B9E\u4F53</span>
    err <span class="token operator">=</span> binary<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>pkg<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pkg<span class="token punctuation">.</span><span class="token function">Bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token comment">// Decode \u89E3\u7801\u6D88\u606F</span>
<span class="token keyword">func</span> <span class="token function">Decode</span><span class="token punctuation">(</span>reader <span class="token operator">*</span>bufio<span class="token punctuation">.</span>Reader<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BFB\u53D6\u6D88\u606F\u7684\u957F\u5EA6</span>
    lengthByte<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">Peek</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// \u8BFB\u53D6\u524D4\u4E2A\u5B57\u8282\u7684\u6570\u636E</span>
    lengthBuff <span class="token operator">:=</span> bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span>lengthByte<span class="token punctuation">)</span>
    <span class="token keyword">var</span> length <span class="token builtin">int32</span>
    err <span class="token operator">:=</span> binary<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>lengthBuff<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">,</span> <span class="token operator">&amp;</span>length<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token comment">// Buffered\u8FD4\u56DE\u7F13\u51B2\u4E2D\u73B0\u6709\u7684\u53EF\u8BFB\u53D6\u7684\u5B57\u8282\u6570\u3002</span>
    <span class="token keyword">if</span> <span class="token function">int32</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span><span class="token function">Buffered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> length<span class="token operator">+</span><span class="token number">4</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8BFB\u53D6\u771F\u6B63\u7684\u6D88\u606F\u6570\u636E</span>
    pack <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">+</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>pack<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">string</span><span class="token punctuation">(</span>pack<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div></details><p><strong>\u65B9\u5F0F\u4E8C\uFF1Amsg_header+content_len+content</strong></p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// proto/proto.go</span>

<span class="token keyword">package</span> proto

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;encoding/binary&quot;</span>
	<span class="token string">&quot;errors&quot;</span>
	<span class="token string">&quot;io&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> Msg_Header <span class="token operator">=</span> <span class="token string">&quot;12345678&quot;</span>

<span class="token keyword">func</span> <span class="token function">Encode</span><span class="token punctuation">(</span>bytesBuffer io<span class="token punctuation">.</span>Writer<span class="token punctuation">,</span> content <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token comment">//msg_header+content_len+content</span>
	<span class="token comment">//8+4+content_len</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> binary<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>bytesBuffer<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>BigEndian<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>Msg_Header<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	clen <span class="token operator">:=</span> <span class="token function">int32</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> binary<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>bytesBuffer<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>BigEndian<span class="token punctuation">,</span> clen<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> binary<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>bytesBuffer<span class="token punctuation">,</span> binary<span class="token punctuation">.</span>BigEndian<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Decode</span><span class="token punctuation">(</span>bytesBuffer io<span class="token punctuation">.</span>Reader<span class="token punctuation">)</span> <span class="token punctuation">(</span>bodyBuf <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	MagicBuf <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>Msg_Header<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">ReadFull</span><span class="token punctuation">(</span>bytesBuffer<span class="token punctuation">,</span> MagicBuf<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">string</span><span class="token punctuation">(</span>MagicBuf<span class="token punctuation">)</span> <span class="token operator">!=</span> Msg_Header <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;msg_header error&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	lengthBuf <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">ReadFull</span><span class="token punctuation">(</span>bytesBuffer<span class="token punctuation">,</span> lengthBuf<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>

	length <span class="token operator">:=</span> binary<span class="token punctuation">.</span>BigEndian<span class="token punctuation">.</span><span class="token function">Uint32</span><span class="token punctuation">(</span>lengthBuf<span class="token punctuation">)</span>
	bodyBuf <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">ReadFull</span><span class="token punctuation">(</span>bytesBuffer<span class="token punctuation">,</span> bodyBuf<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> bodyBuf<span class="token punctuation">,</span> err
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div></details><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u63A5\u4E0B\u6765\u5728\u670D\u52A1\u7AEF\u548C\u5BA2\u6237\u7AEF\u5206\u522B\u4F7F\u7528\u4E0A\u9762\u5B9A\u4E49\u7684proto\u5305\u7684Decode\u548CEncode\u51FD\u6570\u5904\u7406\u6570\u636E</p></div><h4 id="server-4" tabindex="-1"><a class="header-anchor" href="#server-4" aria-hidden="true">#</a> Server</h4><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">process</span><span class="token punctuation">(</span>conn net<span class="token punctuation">.</span>Conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    reader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        msg<span class="token punctuation">,</span> err <span class="token operator">:=</span> proto<span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;decode msg failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1:30000&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;listen failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> listen<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> listen<span class="token punctuation">.</span><span class="token function">Accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;accept failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">go</span> <span class="token function">process</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div></details><h4 id="client-4" tabindex="-1"><a class="header-anchor" href="#client-4" aria-hidden="true">#</a> client</h4><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1:30000&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;dial failed, err&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        msg <span class="token operator">:=</span> <span class="token string">\`Hello, Hello. How are you?\`</span>
        data<span class="token punctuation">,</span> err <span class="token operator">:=</span> proto<span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;encode msg failed, err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></details><h4 id="result-1" tabindex="-1"><a class="header-anchor" href="#result-1" aria-hidden="true">#</a> Result</h4><ul><li>\u5148\u542F\u52A8\u670D\u52A1\u7AEF\u518D\u542F\u52A8\u5BA2\u6237\u7AEF\uFF0C\u53EF\u4EE5\u770B\u5230\u670D\u52A1\u7AEF\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B</li><li>\u5BA2\u6237\u7AEF\u520620\u6B21\u53D1\u9001\u7684\u6570\u636E\uFF0C\u5728\u670D\u52A1\u7AEF\u6210\u529F\u7684\u8F93\u51FA20\u6B21</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
\u6536\u5230client\u53D1\u6765\u7684\u6570\u636E\uFF1A Hello, Hello. How are you?
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,80);function c(l,u){return o}var k=s(e,[["render",c]]);export{k as default};
